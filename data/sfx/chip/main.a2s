def title	"KRChip"
def version	"1.0.0"
def description	"Kobo Redux Chip Sound Theme"
def author	"David Olofson"
def copyright	"Copyright 2016 David Olofson"
def license	"GPL"
def a2sversion	"1.9.1"


  //////////////////////////////////
 // Master section
//////////////////////////////////

export import "master.a2s"


  //////////////////////////////////
 // Game sound effects
//////////////////////////////////

export import "sfx.a2s"


  //////////////////////////////////
 // UI sound effects
//////////////////////////////////

export import "uisfx.a2s"


  //////////////////////////////////
 // Music
//////////////////////////////////

TitleSong()
{
	struct {
		wtosc o1;	wtosc o1b
		wtosc o2;	wtosc o2b
		wtosc o3
	}
	o1.w pulse30; o1b.w pulse40
	o2.w saw; o2b.w saw
	o3.w noise

	!base (rand 6n quant 1n)

	//Intro
	o1.p (base - 36n1); o1b.p (o1.p + 0n2)
	o1.a .15; o1b.a .15
	d 1000

	o2.p (base - 12n)
	o2b.p (o2.p + 8n05)
	o2.a .2; o2b.a .2; ramp o2.a 4000; ramp o2b.a 4000
	d 2000

	100 {
		-o2b.p (1n / 100)
		d 10
	}
	d 2000

	o2.a 0; o2b.a 0
	o3.p 3; o3.a .1
	d 2000

	for {
		// Calculate harmony
		o1.p (base - 36n1); o1b.p (o1.p + 0n2)
		o2.p (base + 3n + (rand 7n quant 4n) - 12n)
		o2b.p (o2.p + 7n05)

		// 1
		o3.p (rand .5); @o3.a .5; o3.a 0
		o1.a .3; o1b.a .3
		o2.a .2; o2b.a .2
		d 2000

		// 2
		o3.p (1 + rand .5); @o3.a .4; o3.a 0
		o1.a .1; o1b.a .1
		o2.a .1; o2b.a .1
		d 2000

		// 3
		o3.p (2 + rand .5); @o3.a .25; o3.a 0
		o1.a .2; o1b.a .2
		o2.a 0; o2b.a 0
		d 2000

		// 4
		o3.p (3 + rand .5); @o3.a .2; o3.a 0; ramp o3.a 2000
		base (rand 6n quant 1n)
		!nb (base - 36n1)
		200 {
			+o1.p (nb - o1.p * .02); o1b.p (o1.p + 0n2)
			d 10
		}
	}
}

export S_TITLESONG()
{
	struct {
		inline 0 1
		fbdelay 1 2
		panmix 2 >
	}
	fbdelay 900;	fbgain .3
	ldelay 976;	lgain .2
	rdelay 1133;	rgain .2
	vol .6
	set
	1:TitleSong
	end
.stop	vol 0;	d 1000
	kill 1
	1() {
		force stop
	}
}


IngameSong()
{
	struct {
		wtosc o1
		wtosc o2
		wtosc o3
	}

	o1.w noise; o2.w noise; o3.w noise
	o1.p 0; o2.p 1; o3.p 3

	for {
		!p1 (rand 1 - .5)
		!p2 (rand 2)
		!p3 (rand 2 + 2)
		o1.a (rand .4); ramp o1.a 3000
		o2.a (rand .2); ramp o2.a 3000
		o3.a (rand .1); ramp o3.a 3000
		30 {
			+o1.p (p1 - o1.p * .01)
			+o2.p (p2 - o2.p * .01)
			+o3.p (p3 - o3.p * .01)
			d 100
		}
	}
}

export S_INGAMESONG1()
{
	struct {
		inline 0 2
		fbdelay 2 2
		panmix 2 >
	}
	fbdelay 1500; fbgain .5
	ldelay 1333; lgain .5
	rdelay 1444; rgain .5
	vol .1
	set
	1:IngameSong
	end
.stop	vol 0;	d 1000
	kill 1
	1() {
		force stop
	}
}
export def S_INGAMESONG2 S_INGAMESONG1
export def S_INGAMESONG3 S_INGAMESONG1
export def S_INGAMESONG4 S_INGAMESONG1
export def S_INGAMESONG5 S_INGAMESONG1
